1. Write a Matlab function “linearconv.m” to perform linear convolution of two sequences. Use this function to verify following properties of Linear Convolution.a. Commutative Propertyb. Associative Propertyc. Distributive PropertyCode:linearconv.mfunction[output]= linearconv(a,b) l1=length(a); l2=length(b); lo=l1+l2-1; output=zeros(1,lo); %initialise output vector to m+n-1 zerosforn=1:lo sum=0; fork=1:l1 if(n-k+1>0 && n-k+1<=l2) sum=sum+a(k)*b(n-k+1); endendoutput(n)=sum; endverify.mclc;%test commutative property% c=a*b d=b*aa=[1,2,3,4,5]; b=[1,2,3,4]; c=linearconv(a,b); d=linearconv(b,a); 
disp('LHS of commutative property'); disp(c); disp('RHS of commutative property'); disp(d); disp('COMMUTATIVE PROPERTY VERIFIED.'); disp(' ')%test associative propertya=[1,2,3,4,5]; b=[1,2,3]; c=[2,3]; %find (a*b)*c where d=a*bd=linearconv(a,b); e=linearconv(d,c); %find a*(b*c) where f=b*cf=linearconv(b,c); g=linearconv(a,f); disp('LHS of associative property'); disp(e); disp('RHS of associative property'); disp(g); disp('ASSOCIATIVE PROPERTY VERIFIED.');disp(' ')%test distributive propertya=[1,2,3]; x1=[2,3,4,5]; x2=[8,9]; com_length=max([length(a),length(x1),length(x2)]); a=[a zeros(1,com_length-length(a))]; x1=[x1 zeros(1,com_length-length(x1))]; x2=[x2 zeros(1,com_length-length(x2))]; lhs=linearconv(a,x1)+linearconv(a,x2); rhs=linearconv(a,x1+x2); disp('LHS of distributive property'); disp(lhs); disp('RHS of distributive property'); disp(rhs);disp('DISTRIBUTIVE PROPERTY VERIFIED.');
Output:2. Write a Matlab function “dft.m” to find DFT of a sequence. Use this function to find the convolution of two sequences.Code:dft.mfunction[output]=dft(x,N) %initialise ouput vector to N zerosoutput= zeros(1,N); %constant factor in dft equation pre-computedb= -1i*2*pi/N; lx=length(x); fork=1:N output(k)=0; forn=0:lx-1 output(k)=output(k)+x(n+1)*exp(b*(k-1)*n); endend
verifydft.m%find convolution using dft functionclc; N=8; % a and b are two vectors whose convolution is to be computeda=[1,2,3,4,5]; b=[1,2,3,4]; %convolution using user defined functionc=linearconv(a,b); Ak=dft(a,N); Bk=dft(b,N); Ck=Ak.*Bk; %convolution by idftof pointwise multiplied DFT sequencesconSeq=(1/N).*(conj(dft(conj(Ck),N))); disp('Convolution using linearconv function:'); disp(c); disp('Convolution using dft function:'); disp(conSeq); Output:3. Write a Matlabprogram to find DFT of a sequence using DIF-FFT.Code:dif_fft.m%dft using DIF-FFTclc; x =[1,-1,-1,-1,1,1,1,-1]; N =8; Xk=fft(x); p=log2(N); 
Half=N/2; forstage=1:p %process input vector stage by stage and write back to it forindex=0:(N/(2^(stage-1))):(N-1) forn=0:(Half-1) pos=n+index+1; pow=(2^(stage-1))*n; w=exp((-1i)*(2*pi)*pow/N); %twiddle factors a=x(pos)+x(pos+Half); %butterfly additionb=(x(pos)-x(pos+Half)).*w; %butterfly subtractionx(pos)=a; x(pos+Half)=b; endendHalf=Half/2; endy=bitrevorder(x); %inbuilt function to bit reverse the indicesdisp('FFT computed using inbuilt function'); disp(Xk); disp('FFT computed using program'); disp(y); 
